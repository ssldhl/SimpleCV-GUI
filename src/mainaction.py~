"""Subclass of MainFrame, which is generated by wxFormBuilder."""

import wx
import gui
from SimpleCV import *
import os
import numpy as np
import Image
from dialogaction import DialogFrame


# Implementing MainFrame
class ParentFrame( gui.MainFrame ):
	img  =  SimpleCV.Image()
	def __init__( self, parent ):
		gui.MainFrame.__init__( self, parent )
		self.cam = SimpleCV.Camera(DialogFrame.device, prop_set={"width":640,"height":480})
	
	# Handlers for MainFrame events.
	def OnAbout( self, event ):
		# TODO: Implement OnAbout
		dlg = wx.MessageDialog(self, "Developed by: Sushil Dahal \n\nContact:"+
        "\nE-mail: sushilthe@gmail.com\nFollow me on Twitter: www.twitter.com/sushilthe", "SimpleShow", wx.OK)
		dlg.ShowModal()
		dlg.Destroy()
	
	def OnExit( self, event ):
		# TODO: Implement OnExit
		self.Close(True)
	
	def OnPreview( self, event ):
		# TODO: Implement OnPreview
		while True:
			self.cam.getImage().show()
	
	def OnCapture( self, event ):
		# TODO: Implement OnCapture
		ParentFrame.img = self.cam.getImage()
		ParentFrame.clean(self)
		ParentFrame.save(self)

	def clean( self):
		filelist = [ f for f in os.getcwd() if f.endswith(".jpg") ]
		for f in filelist:
			os.remove(f)
	
	def save(self):
		loc=os.getcwd()
		ParentFrame.img.save(loc+"/temp.jpg")
		ParentFrame.img.save(loc+"/temp1.jpg")
		image = wx.Image(loc+"/temp.jpg")
		self.ImageDisplay.SetBitmap(wx.BitmapFromImage(image))
	
	def OnFileChange( self, event ):
		# TODO: Implement OnFileChange
		path = self.FilePicker.GetPath()
		image = Image.open(path)  # image is a PIL image
		array = np.array(image)
		img = Image.fromarray(array)
		ParentFrame.img = SimpleCV.Image(img).scale(640,480)
		ParentFrame.clean(self)
		ParentFrame.save(self)
		
	def savefeature(self):
		loc = os.getcwd()
		ParentFrame.img.save(loc+"/temp1.jpg")
		image = wx.Image(loc+"/temp1.jpg")
		self.ImageDisplay.SetBitmap(wx.BitmapFromImage(image))
	
	def OnOk( self, event ):
		# TODO: Implement OnOk
		image = SimpleCV.Image("temp1.jpg")
		if self.FeatureCombobox.GetValue() == u"Rotate 270 degree":
			ParentFrame.img = image.rotate( 270, point=(image.width/2,image.height/2))
			ParentFrame.savefeature(self)
		elif self.FeatureCombobox.GetValue() == u"Rotate 90 degree":
			ParentFrame.img = image.rotate( 270, point=(image.width/2,image.height/2))
			ParentFrame.savefeature(self)
		elif self.FeatureCombobox.GetValue() == u"Rotate 180 degree":
			ParentFrame.img = image.rotate( 270, point=(image.width/2,image.height/2))
			ParentFrame.savefeature(self)
	def OnReset(self, event):
		# TODO: Implement OnReset
		image = SimpleCV.Image("temp.jpg")
		ParentFrame.img = image
		ParentFrame.savefeature(self)
			
	def OnSave( self, event ):
		# TODO: Implement OnSave
		path = self.FilePicker.GetPath()
		fileName, fileExtension = os.path.splitext(path)
		image = SimpleCV.Image("temp1.jpg")
		image.save(fileName+"SimpleCV.jpg")
		
